<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="9" enumb="76">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(snd_buttonClick, 1, false);

if file_exists("level.txt") {
    file_delete("level.txt");
    show_debug_message("Level deleted!");
}

ini_open("level.txt");

if instance_exists(obj_wall) {
    for (i = 0; i &lt; instance_number(obj_wall); i += 1) {
        wall = instance_find(obj_wall, i);
        ini_write_string("levels", "wall" + string(i), "instance_create(" + string(wall.x) + ", " + string(wall.y) + ", " + object_get_name(wall.object_index) + "); wall" + string(i) + ".phy_rotation = " + string(wall.phy_rotation) + ";");
    }
}

if instance_exists(obj_debris) {
    for (i = 0; i &lt; instance_number(obj_debris); i += 1) {
        debris = instance_find(obj_debris, i);
        ini_write_string("levels", "debris" + string(i), "instance_create(" + string(debris.x) + ", " + string(debris.y) + ", " + object_get_name(debris.object_index) + "); debris" + string(i) + ".phy_rotation = " + string(debris.phy_rotation) + ";");
    }
}

if instance_exists(obj_gravParent) {
    for (i = 0; i &lt; instance_number(obj_gravParent); i += 1) {
        gravParent = instance_find(obj_gravParent, i);
        ini_write_string("levels", "gravParent" + string(i), "instance_create(" + string(gravParent.x) + ", " + string(gravParent.y) + ", " + object_get_name(gravParent.object_index) + "); gravParent" + string(i) + ".image_angle = " + string(gravParent.image_angle) + "; gravParent" + string(i) + ".image_xscale = " + string(gravParent.image_xscale) + "; gravParent" + string(i) + ".image_yscale = " + string(gravParent.image_yscale) + ";");
    }
}

if instance_exists(obj_slowWarp) {
    for (i = 0; i &lt; instance_number(obj_slowWarp); i += 1) {
        slowWarp = instance_find(obj_slowWarp, i);
        ini_write_string("levels", "slowWarp" + string(i), "instance_create(" + string(slowWarp.x) + ", " + string(slowWarp.y) + ", " + object_get_name(slowWarp.object_index) + "); slowWarp" + string(i) + ".image_angle = " + string(slowWarp.image_angle) + "; slowWarp" + string(i) + ".image_xscale = " + string(slowWarp.image_xscale) + "; slowWarp" + string(i) + ".image_yscale = " + string(slowWarp.image_yscale) + ";");
    }
}

if instance_exists(obj_gravBall) {
    for (i = 0; i &lt; instance_number(obj_gravBall); i += 1) {
        gravBall = instance_find(obj_gravBall, i);
        ini_write_string("levels", "gravBall" + string(i), "instance_create(" + string(gravBall.x) + ", " + string(gravBall.y) + ", " + object_get_name(gravBall.object_index) + "); gravBall" + string(i) + ".phy_rotation = " + string(gravBall.phy_rotation) + ";");
    }
}

if instance_exists(obj_deadly) {
    for (i = 0; i &lt; instance_number(obj_deadly); i += 1) {
        deadly = instance_find(obj_deadly, i);
        ini_write_string("levels", "deadly" + string(i), "instance_create(" + string(deadly.x) + ", " + string(deadly.y) + ", " + object_get_name(deadly.object_index) + "); deadly" + string(i) + ".phy_rotation = " + string(deadly.phy_rotation) + ";");
    }
}

if instance_exists(obj_charge) {
    for (i = 0; i &lt; instance_number(obj_charge); i += 1) {
        charge = instance_find(obj_charge, i);
        ini_write_string("levels", "charge" + string(i), "instance_create(" + string(charge.x) + ", " + string(charge.y) + ", " + object_get_name(charge.object_index) + "); charge" + string(i) + ".phy_rotation = " + string(charge.phy_rotation) + ";");
    }
}

if instance_exists(obj_hydraulicParent) {
    for (i = 0; i &lt; instance_number(obj_hydraulicParent); i += 1) {
        hydraulic = instance_find(obj_hydraulicParent, i);
        ini_write_string("levels", "hydraulic" + string(i), "instance_create(" + string(hydraulic.x) + ", " + string(hydraulic.y) + ", " + object_get_name(hydraulic.object_index) + "); hydraulic" + string(i) + ".phy_rotation = " + string(hydraulic.phy_rotation) + ";");
    }
}

if instance_exists(obj_rotator) {
    for (i = 0; i &lt; instance_number(obj_rotator); i += 1) {
        rotator = instance_find(obj_rotator, i);
        ini_write_string("levels", "rotator" + string(i), "instance_create(" + string(rotator.x) + ", " + string(rotator.y) + ", " + object_get_name(rotator.object_index) + "); rotator" + string(i) + ".phy_rotation = " + string(rotator.phy_rotation) + ";");
    }
}

ini_close();

show_debug_message("Level saved!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
